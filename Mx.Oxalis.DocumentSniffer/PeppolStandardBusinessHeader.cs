using System;
using System.Collections.Generic;
using System.Text;

namespace Mx.Oxalis.DocumentSniffer
{
    using Mx.Oxalis.DocumentSniffer.Identifier;
    using Mx.Peppol.Common.Model;

    /**
     * Our representation of the SBDH (Standard Business Document Header), which makes us
     * independent of the StandardBusinessDocumentHeader generated by JAXB. Furthermore
     * the UN/CEFACT SBDH is kind of awkward to use as some of the elements of interest to us,
     * are split into several fields.
     *
     * @author steinar
     * @author thore
     */
    public class PeppolStandardBusinessHeader
    {

        /**
         * Peppol Participant Identification for the recipient
         */
        private ParticipantIdentifier recipientId;

        /**
         * Peppol Participant Identification for the sender
         */
        private ParticipantIdentifier senderId;

        /**
         * The type of document to send
         */
        private DocumentTypeIdentifier peppolDocumentTypeId;

        /**
         * The business process this document is a part of
         */
        private ProcessIdentifier profileTypeIdentifier;

        /**
         * Represents the unique identity of the message envelope. It is not the same as the ID of the
         * business message (such as the Invoice number). Nor is it the same as the transmission Message ID
         * generated by the application sending the message (as defined in AS2).
         * <p>
         * This messageId is not the same as the "AS2 Message-ID" or the "START message id", which really are
         * unique "transmission id's" that should be unique for each transmission.
         * <p>
         * <code>//StandardBusinessDocumentHeader/DocumentIdentification/InstanceIdentifier</code>
         */
        private InstanceId instanceId;

        private DateTime? creationDateAndTime;

        /**
         * Set the time to current and makes a random TransmissionIdentifier as default
         */
        public static PeppolStandardBusinessHeader createPeppolStandardBusinessHeaderWithNewDate()
        {
            PeppolStandardBusinessHeader p = new PeppolStandardBusinessHeader();
            p.setCreationDateAndTime(DateTime.Now);
            return p;
        }

        /**
         * Empty constructor, no defaults - all must be supplied by user
         */
        public PeppolStandardBusinessHeader()
        {
            /* intentionally nothing */
        }

        public PeppolStandardBusinessHeader(Header header)
        {
            this.senderId = header.getSender();
            this.recipientId = header.getReceiver();
            this.creationDateAndTime = header.getCreationTimestamp();
            this.peppolDocumentTypeId = header.getDocumentType();
            this.profileTypeIdentifier = header.getProcess();
            this.instanceId = new InstanceId(header.getIdentifier().getIdentifier());
        }

        /**
         * Copy constructor
         */
        public PeppolStandardBusinessHeader(PeppolStandardBusinessHeader peppolStandardBusinessHeader)
        {
            this.recipientId = peppolStandardBusinessHeader.getRecipientId();
            this.senderId = peppolStandardBusinessHeader.getSenderId();
            this.peppolDocumentTypeId = peppolStandardBusinessHeader.getDocumentTypeIdentifier();
            this.profileTypeIdentifier = peppolStandardBusinessHeader.getProfileTypeIdentifier();
            this.instanceId = peppolStandardBusinessHeader.getInstanceId();
            this.creationDateAndTime = peppolStandardBusinessHeader.getCreationDateAndTime();
        }

        /**
         * Do we have enough transport details to send the message?
         *
         * @return true if transport details are complete.
         */
        public bool isComplete()
        {
            return ((this.recipientId != null) &&
                    (this.senderId != null) &&
                    (this.peppolDocumentTypeId != null) &&
                    (this.profileTypeIdentifier != null) &&
                    (this.instanceId != null) &&
                    (this.creationDateAndTime != null));
        }

        /**
         * Returns a list of property names that are still missing.
         *
         * @return empty list if headers are complete
         */
        public List<String> listMissingProperties()
        {
            List<String> mhf = new List<string>();
            if (this.recipientId == null) mhf.Add("recipientId");
            if (this.senderId == null) mhf.Add("senderId");
            if (this.peppolDocumentTypeId == null) mhf.Add("peppolDocumentTypeId");
            if (this.profileTypeIdentifier == null) mhf.Add("profileTypeIdentifier");
            if (this.instanceId == null) mhf.Add("messageId");
            if (this.creationDateAndTime == null) mhf.Add("creationDateAndTime");
            return mhf;
        }

        public void setRecipientId(ParticipantIdentifier recipientId)
        {
            this.recipientId = recipientId;
        }

        public ParticipantIdentifier getRecipientId()
        {
            return this.recipientId;
        }

        public void setSenderId(ParticipantIdentifier senderId)
        {
            this.senderId = senderId;
        }

        public ParticipantIdentifier getSenderId()
        {
            return this.senderId;
        }

        public void setInstanceId(InstanceId instanceId)
        {
            this.instanceId = instanceId;
        }

        public InstanceId getInstanceId()
        {
            return this.instanceId;
        }

        public void setCreationDateAndTime(DateTime? creationDateAndTime)
        {
            this.creationDateAndTime = creationDateAndTime;
        }

        public DateTime? getCreationDateAndTime()
        {
            return this.creationDateAndTime;
        }

        [Obsolete]
        public void setDocumentTypeIdentifier(PeppolDocumentTypeId documentTypeIdentifier)
        {
            setDocumentTypeIdentifier(documentTypeIdentifier.toVefa());
        }

        public void setDocumentTypeIdentifier(DocumentTypeIdentifier documentTypeIdentifier)
        {
            this.peppolDocumentTypeId = documentTypeIdentifier;
        }

        public DocumentTypeIdentifier getDocumentTypeIdentifier()
        {
            return this.peppolDocumentTypeId;
        }

        public void setProfileTypeIdentifier(ProcessIdentifier processIdentifier)
        {
            this.profileTypeIdentifier = processIdentifier;
        }

        public ProcessIdentifier getProfileTypeIdentifier()
        {
            return this.profileTypeIdentifier;
        }

        public Header toVefa()
        {
            PeppolDocumentTypeId documentTypeId = PeppolDocumentTypeId.valueOf(this.peppolDocumentTypeId.getIdentifier());

            return Header.of(
                this.senderId,
                this.recipientId,
                this.profileTypeIdentifier,
                this.peppolDocumentTypeId,
                this.instanceId == null ? InstanceIdentifier.generateUUID() : this.instanceId.toVefa(),
                    InstanceType.of(
                            documentTypeId.getRootNameSpace(),
                            documentTypeId.getLocalName(),
                            documentTypeId.getVersion()
                    ),
                this.creationDateAndTime
            );
        }
    }

}
